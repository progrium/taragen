name: Build
on: [push]
env:
  BIN_NAME: taragen
  GO_VERSION: '1.23.1'
  AC_API_KEY_ID: ${{ secrets.AC_API_KEY_ID }}
  AC_ISSUER_ID: ${{ secrets.AC_ISSUER_ID }}
  AC_PRIVATE_KEY: ${{ secrets.AC_PRIVATE_KEY }}
  SIGNING_CERTIFICATE: ${{ secrets.SIGNING_CERTIFICATE }}
  SIGNING_CERT_PASSWORD: ${{ secrets.SIGNING_CERT_PASSWORD }}
jobs:
  build-windows:
    runs-on: ubuntu-latest
    name: Build for Windows
    env:
      DIST_OS: windows
      DIST_ARCH: arm64 amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Build project
        run: make dist

      - name: Prepare arm64 artifact
        run: mv dist/*_arm64 ./${BIN_NAME}

      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-windows-arm64
          path: ${{ env.BIN_NAME }}

      - name: Prepare amd64 artifact
        run: mv dist/*_amd64 ./${BIN_NAME}

      - name: Upload amd64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-windows-amd64
          path: ${{ env.BIN_NAME }}

  build-linux:
    runs-on: ubuntu-latest
    name: Build for Linux
    env:
      DIST_OS: linux
      DIST_ARCH: arm64 amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Build project
        run: make dist

      - name: Prepare arm64 artifact
        run: mv dist/*_arm64 ./${BIN_NAME}

      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-linux-arm64
          path: ${{ env.BIN_NAME }}

      - name: Prepare amd64 artifact
        run: mv dist/*_amd64 ./${BIN_NAME}

      - name: Upload amd64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-linux-amd64
          path: ${{ env.BIN_NAME }}

  build-darwin-arm64:
    runs-on: macos-latest
    name: Build for Darwin (arm64)
    env:
      DIST_OS: darwin
      DIST_ARCH: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup signing certificate and notarytool
        run: |
          echo "$SIGNING_CERTIFICATE" | base64 --decode > cert.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import cert.p12 -k build.keychain -P "$SIGNING_CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
          echo "$AC_PRIVATE_KEY" | base64 --decode > private_key.p8
          xcrun notarytool store-credentials --key private_key.p8 \
            --key-id "$AC_API_KEY_ID" --issuer "$AC_ISSUER_ID" ac-profile

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Build project
        run: |
          make build
          mv ./local/bin/${BIN_NAME} ./${BIN_NAME}

      - name: Sign
        run: |
          codesign --timestamp --options runtime --sign "Developer ID Application" ./${BIN_NAME}

      - name: Notarize
        run: |
          zip ${BIN_NAME}.zip ${BIN_NAME}
          xcrun notarytool submit ${BIN_NAME}.zip --keychain-profile ac-profile --wait

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-darwin-arm64
          path: ${{ env.BIN_NAME }}

  build-darwin-amd64:
    runs-on: macos-13
    name: Build for Darwin (amd64)
    env:
      DIST_OS: darwin
      DIST_ARCH: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup signing certificate and notarytool
        run: |
          echo "$SIGNING_CERTIFICATE" | base64 --decode > cert.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import cert.p12 -k build.keychain -P "$SIGNING_CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
          echo "$AC_PRIVATE_KEY" | base64 --decode > private_key.p8
          xcrun notarytool store-credentials --key private_key.p8 \
            --key-id "$AC_API_KEY_ID" --issuer "$AC_ISSUER_ID" ac-profile

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Build project
        run: |
          make build
          mv ./local/bin/${BIN_NAME} ./${BIN_NAME}

      - name: Sign
        run: |
          codesign --timestamp --options runtime --sign "Developer ID Application" ./${BIN_NAME}

      - name: Notarize
        run: |
          zip ${BIN_NAME}.zip ${BIN_NAME}
          xcrun notarytool submit ${BIN_NAME}.zip --keychain-profile ac-profile --wait

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-darwin-amd64
          path: ${{ env.BIN_NAME }}